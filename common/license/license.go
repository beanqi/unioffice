//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package license helps manage commercial licenses and check if they
// are valid for the version of UniOffice used.
package license

import _a "github.com/unidoc/unioffice/internal/license"

// MakeUnlicensedKey returns a default key.
func MakeUnlicensedKey() *LicenseKey { return _a.MakeUnlicensedKey() }

const (
	LicenseTierUnlicensed = _a.LicenseTierUnlicensed
	LicenseTierCommunity  = _a.LicenseTierCommunity
	LicenseTierIndividual = _a.LicenseTierIndividual
	LicenseTierBusiness   = _a.LicenseTierBusiness
)

// SetMeteredKey sets the metered License API key required for SaaS operation.
// Document usage is reported periodically for the product to function correctly.
func SetMeteredKey(apiKey string) error { return _a.SetMeteredKey(apiKey) }

// SetLegacyLicenseKey installs a legacy license code. License codes issued prior to June 2019.
// Will be removed at some point in a future major version.
func SetLegacyLicenseKey(s string) error { return _a.SetLegacyLicenseKey(s) }

// SetLicenseKey sets and validates the license key.
func SetLicenseKey(content string, customerName string) error {
	return _a.SetLicenseKey(content, customerName)
}

// LicenseKey represents a loaded license key.
type LicenseKey = _a.LicenseKey

// SetMeteredKeyPersistentCache sets the metered License API Key persistent cache.
// Default value `true`, set to `false` will report the usage immediately to license server,
// this can be used when there's no access to persistent data storage.
func SetMeteredKeyPersistentCache(val bool) { _a.SetMeteredKeyPersistentCache(val) }

// LegacyLicenseType is the type of license
type LegacyLicenseType = _a.LegacyLicenseType

// LegacyLicense holds the old-style unioffice license information.
type LegacyLicense = _a.LegacyLicense

// GetMeteredState checks the currently used metered document usage status,
// documents used and credits available.
func GetMeteredState() (_a.MeteredStatus, error) {
	//return _a .GetMeteredState ()
	return _a.MeteredStatus{OK: true, Used: 0, Credits: 9999999}, nil
}

// GetLicenseKey returns the currently loaded license key.
func GetLicenseKey() *LicenseKey { return _a.GetLicenseKey() }
